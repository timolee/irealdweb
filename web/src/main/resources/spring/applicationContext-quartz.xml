<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"
	default-lazy-init="true">

	<description>Quartz的定时集群任务配置</description>

	<!-- Quartz集群Schduler -->
	<bean id="clusterQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!-- Triggers集成 -->
		<property name="triggers">
			<list>
				<ref bean="timerTrigger" />
			</list>
		</property>
		<!--  quartz配置文件路径, 指向cluster配置 -->
		<property name="configLocation" value="classpath:quartz-cluster.properties" />
		<!-- 启动时延期2秒开始任务 -->
		<property name="startupDelay" value="2" />
		<!-- 保存Job数据到数据库所需的数据源 -->
		<property name="dataSource" ref="quartzDataSource" />
		<!-- Job接受applicationContext的成员变量名 -->
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
	</bean>

	<!-- Timer式 Trigger定义-->
	<bean id="timerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="timerJobDetail" />
		<!-- 每次执行间隔5分钟 -->
		<property name="repeatInterval" value="300000" />
	</bean>

	<!-- JobDetail, 基于JobDetailBean实例化Job Class,可持久化到数据库实现集群 -->
	<bean id="timerJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="durability" value="true"/>
		<property name="jobClass" value="org.springside.examples.showcase.demos.schedule.QuartzClusterableJob" />
	</bean>

	<!-- Job的可配置属性,在job中通过applicationContext动态获取 -->
	<util:map id="timerJobConfig">
		<entry key="nodeName" value="${server.node_name}" />
	</util:map>
    <!-- Quartz本地Schduler -->
    <bean id="localQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!-- Triggers集成 -->
        <property name="triggers">
            <list>
                <ref bean="cronTrigger" />
            </list>
        </property>
        <!-- Quartz配置, 本地运行无需单独的quartz.properties文件，在此简单配置即可 -->
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.threadPool.threadCount">5</prop>
            </props>
        </property>
        <!-- 启动时延期2秒开始任务 -->
        <property name="startupDelay" value="2" />
    </bean>

    <!-- Cron式Trigger定义 -->
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="cronJobDetail" />
        <!-- 周一至五,朝九晚五工作时间内每半小时执行一次 -->
        <property name="cronExpression" value="0 0/30 9-17 ? * MON-FRI" />
    </bean>

    <!-- JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
    <bean id="cronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="userCountScanner" />
        <property name="targetMethod" value="executeByQuartzLocalJob" />
        <!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
        <property name="concurrent" value="true" />
    </bean>
</beans>
